#!/usr/bin/env python2.7
from __future__ import (absolute_import)

import sys

from argparse import ArgumentParser

from dadapy.markov import MarkovDictionary

def main():
    args = parse_args()
    text = read_infiles(args)
    md = MarkovDictionary(source_text=text, chunk=args.chunk)
    if (args.debug):
      print(md.contexts)
    else:
      word_count = args.words
      print(md.disgorge(word_count))

def parse_args():
    parser = ArgumentParser()
    parser.add_argument("text", help="paths of source texts", nargs="+")
    parser.add_argument("--debug","-d",
        help="dump the context tree")
    parser.add_argument("--words","-w",
            help="length of output in words", 
            nargs="?", type=int, default=50)
    parser.add_argument("--chunk","-c",
            help="extract a chunk of the provided length from each text",
            nargs="?", type=int)
    return parser.parse_args()

def read_infiles(args):
    # combine all of the contents of all of the infiles into a single string
    text = ""
    for infile in args.text:
        text += open(infile).read()
    return text

if __name__ == "__main__":
    main()
